name: "CodeQL Advanced"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '33 5 * * 3'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-15') || 'ubuntu-latest' }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: swift
          build-mode: autobuild

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # List available Xcodes for debugging
    - name: List available Xcodes
      run: ls -l /Applications | grep Xcode

    # Select Xcode 26 beta explicitly, try all likely paths
    - name: Select Xcode 26 (try all possible paths)
      run: |
        if [ -d /Applications/Xcode_26_beta.app ]; then
          sudo xcode-select -s /Applications/Xcode_26_beta.app
        elif [ -d /Applications/Xcode_26.0.app ]; then
          sudo xcode-select -s /Applications/Xcode_26.0.app
        elif [ -d /Applications/Xcode_26.0.0.app ]; then
          sudo xcode-select -s /Applications/Xcode_26.0.0.app
        else
          echo "Xcode 26 not found!"
          ls -l /Applications
          exit 1
        fi

    - name: Show Xcode version
      run: xcodebuild -version

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}

    - if: matrix.build-mode == 'manual'
      shell: bash
      run: |
        echo 'If you are using a "manual" build mode for one or more of the' \
          'languages you are analyzing, replace this with the commands to build' \
          'your code, for example:'
        echo '  make bootstrap'
        echo '  make release'
        exit 1

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
